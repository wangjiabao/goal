syntax = "proto3";

package api.admin.service.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "goal/api/admin/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.admin.service.v1";

service Admin {
	rpc GamePlayGrant (GamePlayGrantRequest) returns (GamePlayGrantReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play/game/grant"
			body: "send_body"
		};
	};

	rpc SortPlayGrant (SortPlayGrantRequest) returns (SortPlayGrantReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play/sort/grant"
			body: "send_body"
		};
	};

	rpc CreatePlayGame (CreatePlayGameRequest) returns (CreatePlayGameReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play/game"
			body: "send_body"
		};
	};

	rpc CreatePlaySort (CreatePlaySortRequest) returns (CreatePlaySortReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play/sort"
			body: "send_body"
		};
	};

	rpc GetPlayList (GetPlayListRequest) returns (GetPlayListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/game/{game_id}/play"
		};
	};

	rpc GetPlaySortList (GetPlaySortListRequest) returns (GetPlaySortListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/sort_list"
		};
	};

	rpc GetPlayRelList (GetPlayRelListRequest) returns (GetPlayRelListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/play/{play_id}/play_rel"
		};
	};

	rpc GetRoomList (GetRoomListRequest) returns (GetRoomListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/room_list"
		};
	};

	rpc GetRoomPlayList (GetRoomPlayListRequest) returns (GetRoomPlayListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/room/{room_id}/play_list"
		};
	};

	rpc CreatePlayGameScore (CreatePlayGameScoreRequest) returns (CreatePlayGameScoreReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play_game_score"
			body: "send_body"
		};
	};

	rpc CreatePlayGameResult (CreatePlayGameResultRequest) returns (CreatePlayGameResultReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play_game_result"
			body: "send_body"
		};
	};

	rpc CreatePlayGameGoal (CreatePlayGameGoalRequest) returns (CreatePlayGameGoalReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play_game_goal"
			body: "send_body"
		};
	};

	rpc CreatePlayGameSort (CreatePlayGameSortRequest) returns (CreatePlayGameSortReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play_game_sort"
			body: "send_body"
		};
	};

	rpc GetConfigList (GetConfigListRequest) returns (GetConfigListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/system_config_list"
		};
	};

	rpc UpdateConfig (UpdateConfigRequest) returns (UpdateConfigReply) {
		option (google.api.http) = {
			post: "/api/goal_admin/update_system_config"
			body: "send_body"
		};
	};

	rpc DeletePlayGame (DeletePlayGameRequest) returns (DeletePlayGameReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play/game_delete"
			body: "send_body"
		};
	};

	rpc DeletePlaySort (DeletePlaySortRequest) returns (DeletePlaySortReply){
		option (google.api.http) = {
			post: "/api/goal_admin/play/sort_delete"
			body: "send_body"
		};
	};
}

service User {
	rpc UserDeposit (UserDepositRequest) returns (UserDepositReply){
		option (google.api.http) = {
			post: "/api/goal_admin/user/deposit"
			body: "send_body"
		};
	};

	rpc UserWithdraw (UserWithdrawRequest) returns (UserWithdrawReply){
		option (google.api.http) = {
			post: "/api/goal_admin/user/withdraw"
			body: "send_body"
		};
	};

	rpc GetUserList (GetUserListRequest) returns (GetUserListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/user_list"
		};
	};

	rpc GetUserProxyList (GetUserProxyListRequest) returns (GetUserProxyListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/user_proxy_list"
		};
	};

	rpc GetUserWithdrawList (GetUserWithdrawListRequest) returns (GetUserWithdrawListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/user_withdraw_list"
		};
	};

	rpc GetUserDepositList (GetUserDepositListRequest) returns (GetUserDepositListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/user_deposit_list"
		};
	};

	rpc GetUserRecommendList (GetUserRecommendListRequest) returns (GetUserRecommendListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/user/{user_id}/recommend_user_list"
		};
	};

	rpc GetUser (GetUserRequest) returns (GetUserReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/user/{user_id}"
		};
	};

	rpc GetUserBalanceRecord (GetUserBalanceRecordRequest) returns (GetUserBalanceRecordReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/user_balance_record"
		};
	};

	rpc UpdateUserBalanceRecord (UpdateUserBalanceRecordRequest) returns (UpdateUserBalanceRecordReply) {
		option (google.api.http) = {
			post: "/api/goal_admin/update_user_balance_record"
			body: "send_body"
		};
	};
}

service Game {
	rpc CreateGame (CreateGameRequest) returns (CreateGameReply){
		option (google.api.http) = {
			post: "/api/goal_admin/game/create"
			body: "send_body"
		};
	};

	rpc UpdateGame (UpdateGameRequest) returns (UpdateGameReply){
		option (google.api.http) = {
			post: "/api/goal_admin/game/update"
			body: "send_body"
		};
	};

	rpc GetGame (GetGameRequest) returns (GetGameReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/game/{game_id}"
		};
	};

	rpc GetGameList (GetGameListRequest) returns (GetGameListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/games"
		};
	};

	rpc DisplayGameIndex (DisplayGameIndexRequest) returns (DisplayGameIndexReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/display_game/index"
		};
	};

	rpc SaveDisplayGameIndex (SaveDisplayGameIndexRequest) returns (SaveDisplayGameIndexReply){
		option (google.api.http) = {
			post: "/api/goal_admin/display_game/index"
			body: "send_body"
		};
	};

	rpc DeleteDisplayGameIndex (DeleteDisplayGameIndexRequest) returns (DeleteDisplayGameIndexReply){
		option (google.api.http) = {
			post: "/api/goal_admin/display_game/index_delete"
			body: "send_body"
		};
	};

	rpc CreateSort (CreateSortRequest) returns (CreateSortReply){
		option (google.api.http) = {
			post: "/api/goal_admin/sort/create"
			body: "send_body"
		};
	};

	rpc UpdateSort (UpdateSortRequest) returns (UpdateSortReply){
		option (google.api.http) = {
			post: "/api/goal_admin/sort/update"
			body: "send_body"
		};
	};

	rpc GetGameSortList (GetGameSortListRequest) returns (GetGameSortListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/sorts"
		};
	};

	rpc GetTeamList (GetTeamListRequest) returns (GetTeamListReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/team/list"
		};
	};

	rpc CreateTeam (CreateTeamRequest) returns (CreateTeamReply) {
		option (google.api.http) = {
			post: "/api/goal_admin/team/create"
			body: "send_body"
		};
	};

	rpc GameIndexStatistics (GameIndexStatisticsRequest) returns (GameIndexStatisticsReply) {
		option (google.api.http) = {
			get: "/api/goal_admin/index_game/statistics"
		};
	};
}

message GamePlayGrantRequest {
	message SendBody{
		int64 game_id = 1;
	}

	SendBody send_body = 1;
}

message GamePlayGrantReply {
	string result = 1;
}

message SortPlayGrantRequest {
	message SendBody{
		int64 sort_id = 1;
	}

	SendBody send_body = 1;
}

message SortPlayGrantReply {
	string result = 1;
}

message UpdateConfigRequest {
	message SendBody{
		int64 id = 1;
		int64 value = 2;
	}

	SendBody send_body = 1;
}

message UpdateConfigReply {
	int64 id = 1;
}

message DeletePlayGameRequest {
	message SendBody{
		int64 play_id = 1;
	}

	SendBody send_body = 1;
}

message DeletePlayGameReply {
	string result = 1;
}

message DeletePlaySortRequest {
	message SendBody{
		int64 play_id = 1;
	}

	SendBody send_body = 1;
}

message DeletePlaySortReply {
	string result = 1;
}

message CreateGameRequest {
	message SendBody{
		int64 red_team_id = 1;
		int64 blue_team_id = 2;
		string start_time = 3;
		string end_time = 4;
		string up_end_time = 5;
		string down_start_time = 6;
		string name = 7;
	}

	SendBody send_body = 1;
}

message CreateGameReply {
	int64 game_id = 1;
}

message UpdateGameRequest {
	message SendBody{
		int64 red_team_id = 1;
		int64 blue_team_id = 2;
		string start_time = 3;
		string end_time = 4;
		string up_end_time = 5;
		string down_start_time = 6;
		int64 game_id = 7;
		string status = 8;
		int64 red_team_up_goal = 9;
		int64 blue_team_up_goal = 10;
		int64 red_team_down_goal = 11;
		int64 blue_team_down_goal = 12;
		int64 win_team_id =13;
		string name = 14;
	}

	SendBody send_body = 1;
}

message UpdateGameReply {
	int64 game_id = 1;
}

message UpdateSortRequest {
	message SendBody{
		int64 sort_id = 1;
		string end_time = 4;
		string content = 2;
		string status = 3;
	}

	SendBody send_body = 1;
}

message UpdateSortReply {
	int64 sort_id = 1;
}

message DisplayGameIndexRequest {
}

message DisplayGameIndexReply {
	repeated Item items = 1;
	message Item {
		int64 game_id = 1;
	}
}

message GetGameRequest {
	int64 game_id = 1;
}

message GetGameReply {
	int64 red_team_id = 1;
	int64 blue_team_id = 2;
	string start_time = 3;
	string end_time = 4;
	string up_end_time = 5;
	string down_start_time = 6;
	int64 game_id = 7;
	string status = 8;
	int64 red_team_up_goal = 9;
	int64 blue_team_up_goal = 10;
	int64 red_team_down_goal = 11;
	int64 blue_team_down_goal = 12;
	int64 win_team_id =13;
	string name = 14;
	string result = 15;
}

message GetUserRequest {
	int64 user_id = 1;
}

message GetUserReply {
	int64 userBalance = 1;
}

message GetUserRecommendListRequest {
	int64 user_id = 1;
}

message GetUserRecommendListReply {
	repeated Item items = 1;
	message Item {
		string Address = 1;
		string CreatedAt = 3;
		int64 userId = 2;
	}
}

message GetGameListRequest {

}

message GetGameListReply {
	repeated Item items = 1;
	message Item {
		int64 game_id = 1;
		string name = 2;
		string start_time = 3;
		string end_time = 4;
		string up_end_time = 5;
		string down_start_time = 6;
	}
}

message GetPlayListRequest {
	int64 game_id = 1;
}

message GetPlayListReply {
	repeated Item items = 1;
	message Item {
		int64 play_id = 1;
		string type = 2;
		string start_time = 3;
		string end_time = 4;
	}
}

message GetPlaySortListRequest {
	int64 sort_id = 1;
}

message GetPlaySortListReply {
	repeated Item items = 1;
	message Item {
		int64 play_id = 1;
		string type = 2;
		string start_time = 3;
		string end_time = 4;
	}
}

message GetRoomPlayListRequest {
	int64 room_id = 1;
}

message GetRoomPlayListReply {
	repeated Item items = 1;
	message Item {
		int64 play_id = 1;
		string type = 2;
		string start_time = 3;
		string end_time = 4;
	}
}


message GetPlayRelListRequest {
	int64 play_id = 1;
}

message GetPlayRelListReply {
	repeated Item items = 1;
	message Item {
		string address = 1;
		string status = 2;
		int64 Pay = 3;
	}
}

message GetRoomListRequest {
}

message GetRoomListReply {
	repeated Item items = 1;
	message Item {
		int64 room_id = 1;
		string account = 2;
		string CreatedAt = 3;
	}
}

message GetConfigListRequest {
}

message GetConfigListReply {
	repeated Item items = 1;
	message Item {
		int64 id = 3;
		string name = 1;
		int64 value = 2;
	}
}

message GetUserListRequest {

}

message GetUserListReply {
	repeated Item items = 1;
	message Item {
		int64 user_id = 1;
		string address = 2;
		string toAddress = 3;
		string CreatedAt = 4;
	}
}

message GetUserWithdrawListRequest {
	int64 page = 1;
	string status = 2;
}

message GetUserWithdrawListReply {
	int64 count = 2;
	repeated Item items = 1;
	message Item {
		int64 ID = 1;
		string tx = 6;
		string address = 5;
		string status = 2;
		int64 amount = 3;
		string createdAt = 4;
	}
}

message GetUserBalanceRecordRequest {
	int64 page = 1;
	string reason = 2;
}

message GetUserBalanceRecordReply {
	int64 count = 2;
	repeated Item items = 1;
	message Item {
		string address = 7;
		int64 balance = 1;
		int64 amount = 2;
		string reason = 3;
		string type = 4;
		string CreatedAt = 6;
	}
}

message GetUserProxyListRequest {
	int64 user_id = 1;
}

message GetUserProxyListReply {
	repeated Item items = 1;
	message Item {
		string address = 2;
		string CreatedAt = 4;
		int64 rate = 1;
	}
}

message GetUserDepositListRequest {
	int64 page = 1;
	string reason = 2;
	string type = 3;
}

message GetUserDepositListReply {
	int64 count = 2;
	repeated Item items = 1;
	message Item {
		string address = 7;
		int64 balance = 1;
		int64 amount = 2;
		string reason = 3;
		string type = 4;
		string CreatedAt = 6;
	}
}


message UpdateUserBalanceRecordRequest {
	message SendBody{
		int64 user_id = 1;
		int64 amount = 2;
	}

	SendBody send_body = 1;
}

message UpdateUserBalanceRecordReply {
	string result = 1;
}

message CreatePlayGameScoreRequest {
	message SendBody{
		int64 play_id = 1;
		int64 pay = 2;
	}

	SendBody send_body = 1;
}

message CreatePlayGameScoreReply{
	int64 play_id = 3;
}

message CreatePlayGameResultRequest {
	message SendBody{
		int64 play_id = 1;
		string content = 3;
		int64 pay = 2;
	}

	SendBody send_body = 1;
}

message CreatePlayGameResultReply{
	int64 play_id = 3;
}

message CreatePlayGameSortRequest {
	message SendBody{
		int64 play_id = 1;
		int64 pay = 2;
		int64  sort_id = 4;
	}

	SendBody send_body = 1;
}

message CreatePlayGameSortReply{
	int64 play_id = 3;
}

message CreatePlayGameGoalRequest {
	message SendBody{
		int64 game_id = 4;
		int64 goal = 5;
		int64 play_id = 1;
		int64 pay = 2;
		string team = 3;
	}

	SendBody send_body = 1;
}

message CreatePlayGameGoalReply{
	int64 play_id = 3;
}


message GetGameSortListRequest {

}

message GetGameSortListReply {
	repeated Sort sorts = 1;
	message Sort {
		int64  sort_id = 1;
		string sort_type = 2;
		string content = 5;
		string status = 6;
		string sort_name = 3;
		string end_time = 4;
	}
}

message SaveDisplayGameIndexRequest {
	message SendBody{
		int64 game_id = 1;
	}

	SendBody send_body = 1;
}

message SaveDisplayGameIndexReply {
	int64 game_id = 1;
}

message CreatePlayGameRequest {
	message SendBody{
		string start_time = 1;
		string end_time = 2;
		string play_type = 3;
		int64 game_id = 4;
	}

	SendBody send_body = 1;
}

message CreatePlayGameReply {
	int64 play_id = 1;
}

message DeleteDisplayGameIndexRequest {
	message SendBody{
		int64 game_id = 1;
	}

	SendBody send_body = 1;
}

message DeleteDisplayGameIndexReply {
	string result = 1;
}

message CreatePlaySortRequest {
	message SendBody{
		string start_time = 1;
		string end_time = 2;
		int64 sort_id = 4;
	}

	SendBody send_body = 1;
}

message CreatePlaySortReply {
	int64 play_id = 1;
}

message CreateSortRequest {
	message SendBody{
		string sort_name =1;
		string type = 2;
		string end_time = 3;
	}

	SendBody send_body = 1;
}

message CreateSortReply {
	int64 sort_id = 1;
}

message GetTeamListRequest {

}

message GetTeamListReply {
	repeated Team teams = 1;
	message Team {
		int64  team_id = 1;
		string team_name = 3;
	}
}

message CreateTeamRequest {
	message SendBody{
		string name =1;
	}

	SendBody send_body = 1;
}

message CreateTeamReply {
	int64 team_id = 1;
}

message GameIndexStatisticsRequest {
	int64 game_id = 1;
}

message GameIndexStatisticsReply {
	int64 gameId = 1;
	string gameName = 28;
	int64 goalAllPlayId = 2;
	int64 goalAllTotal = 19;
	int64 goalAllRedTotal = 20;
	repeated GoalAllRed goalAllRed = 3;
	message GoalAllRed {
		int64 goal = 1;
		int64 total = 2;
	}
	int64 goalAllBlueTotal = 21;
	repeated GoalAllBlue goalAllBlue = 4;
	message GoalAllBlue {
		int64 goal = 1;
		int64 total = 2;
	}

	int64 goalUpPlayId = 5;
	int64  goalUpTotal = 22;
	int64  goalUpRedTotal = 23;
	repeated GoalUpRed goalUpRed = 6;
	message GoalUpRed {
		int64 goal = 1;
		int64 total = 2;
	}
	int64  goalUpBlueTotal = 24;
	repeated GoalUpBlue goalUpBlue = 7;
	message GoalUpBlue {
		int64 goal = 1;
		int64 total = 2;
	}

	int64 goalDownPlayId = 8;
	int64  goalDownTotal = 25;
	int64  goalDownRedTotal = 26;
	repeated GoalDownRed goalDownRed = 9;
	message GoalDownRed {
		int64 goal = 1;
		int64 total = 2;
	}
	int64  goalDownBlueTotal = 27;
	repeated GoalDownBlue goalDownBlue = 10;
	message GoalDownBlue {
		int64 goal = 1;
		int64 total = 2;
	}

	int64 resultPlayId = 11;
	int64 resultRedTotal = 12;
	int64 resultTotal = 13;
	int64 resultBlueTotal = 14;
	int64 resultDrawTotal = 15;


	int64 scorePlayId = 16;
	int64 scoreTotal = 17;
	repeated Score score = 18;
	message Score {
		string content = 1;
		int64 total = 2;
	}
}

message UserDepositRequest {
	message SendBody{
	}

	SendBody send_body = 1;
}

message UserDepositReply {
	string result = 1;
}

message UserWithdrawRequest {
	message SendBody{
		int64 id = 1;
	}

	SendBody send_body = 1;
}

message UserWithdrawReply {
	string result = 1;
}